#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Unit of Work –≤ —Å—Ç–∏–ª–µ FastAPI —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
1. –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π API –±–µ–∑ DIContainer
2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤ —Ä–∞–º–∫–∞—Ö —Ñ—É–Ω–∫—Ü–∏–∏
3. –ü–æ–¥–¥–µ—Ä–∂–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö UoW
4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ @Dependency.inject
"""

import asyncio
import logging
from contextlib import asynccontextmanager
from typing import AsyncGenerator
from skuf import Dependency

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)


class IUnitOfWork:
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Unit of Work."""
    
    def __init__(self):
        self.operations = []
        self.committed = False
        self.rolled_back = False
    
    def add_operation(self, operation: str):
        """–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –≤ UoW."""
        self.operations.append(operation)
        logger.debug(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è: {operation}")
    
    def commit(self):
        """–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é."""
        self.committed = True
        logger.debug(f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞: {self.operations}")
    
    def rollback(self):
        """–û—Ç–∫–∞—Ç–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é."""
        self.rolled_back = True
        logger.debug(f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–∞—á–µ–Ω–∞: {self.operations}")


class UnitOfWork(IUnitOfWork):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π Unit of Work —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."""
    
    def __enter__(self):
        logger.debug("üöÄ –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π UnitOfWork –Ω–∞—á–∞—Ç")
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        if exc_type is None:
            self.commit()
            logger.debug("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π UnitOfWork –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            self.rollback()
            logger.debug("‚ùå –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π UnitOfWork –æ—Ç–∫–∞—á–µ–Ω")
        return False


class AsyncUnitOfWork(IUnitOfWork):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π Unit of Work —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."""
    
    async def __aenter__(self):
        logger.debug("üöÄ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π UnitOfWork –Ω–∞—á–∞—Ç")
        return self
    
    async def __aexit__(self, exc_type, exc_val, exc_tb):
        if exc_type is None:
            self.commit()
            logger.debug("‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π UnitOfWork –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            self.rollback()
            logger.debug("‚ùå –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π UnitOfWork –æ—Ç–∫–∞—á–µ–Ω")
        return False


@asynccontextmanager
async def get_async_uow() -> AsyncGenerator[IUnitOfWork, None]:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è UoW.
    
    –≠—Ç–æ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π:
    1. –°–æ–∑–¥–∞–µ—Ç UoW
    2. –õ–æ–≥–∏—Ä—É–µ—Ç –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
    3. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç UoW —á–µ—Ä–µ–∑ yield
    4. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–º–º–∏—Ç–∏—Ç –∏–ª–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    """
    logger.debug('üöÄ AsyncGenerator UnitOfWork started')
    
    uow = AsyncUnitOfWork()
    
    try:
        async with uow:
            logger.debug('üìù AsyncGenerator UnitOfWork –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ')
            yield uow
            logger.debug('‚úÖ AsyncGenerator UnitOfWork completed successfully')
    except Exception as e:
        logger.error(f'‚ùå AsyncGenerator UnitOfWork failed: {e}')
        raise
    finally:
        logger.debug('üîö AsyncGenerator UnitOfWork cleanup completed')


def create_sync_uow() -> UnitOfWork:
    """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ UoW."""
    return UnitOfWork()


def create_async_uow() -> AsyncUnitOfWork:
    """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ UoW."""
    return AsyncUnitOfWork()


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Dependency.register(UnitOfWork, context_manager=create_sync_uow)
Dependency.register(AsyncUnitOfWork, async_context_manager=create_async_uow)
Dependency.register(IUnitOfWork, async_generator_factory=get_async_uow)


# –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
@Dependency.inject
def sync_business_logic(uow: Dependency[UnitOfWork]):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º."""
    print("\n=== –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ ===")
    uow.add_operation("–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    uow.add_operation("–û—Ç–ø—Ä–∞–≤–∏—Ç—å email")
    uow.add_operation("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º


@Dependency.inject
def sync_business_logic_with_error(uow: Dependency[UnitOfWork]):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π."""
    print("\n=== –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π ===")
    uow.add_operation("–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    uow.add_operation("–û—Ç–ø—Ä–∞–≤–∏—Ç—å email")
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    raise ValueError("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!")


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
@Dependency.inject
async def async_business_logic(uow: Dependency[AsyncUnitOfWork]):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º."""
    print("\n=== –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ ===")
    uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
    uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º


@Dependency.inject
async def async_business_logic_with_error(uow: Dependency[AsyncUnitOfWork]):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π."""
    print("\n=== –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π ===")
    uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    raise ValueError("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!")


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º
@Dependency.inject
async def async_generator_business_logic(uow: Dependency[IUnitOfWork]):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º."""
    print("\n=== –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º ===")
    uow.add_operation("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    uow.add_operation("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
    uow.add_operation("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º


@Dependency.inject
async def async_generator_business_logic_with_error(uow: Dependency[IUnitOfWork]):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ—à–∏–±–∫–æ–π."""
    print("\n=== –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ—à–∏–±–∫–æ–π ===")
    uow.add_operation("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    uow.add_operation("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    raise ValueError("–û—à–∏–±–∫–∞ –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ!")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Unit of Work –≤ —Å—Ç–∏–ª–µ FastAPI —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º")
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
    try:
        sync_business_logic()
    except Exception as e:
        print(f"–ü–æ–π–º–∞–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    try:
        sync_business_logic_with_error()
    except Exception as e:
        print(f"–ü–æ–π–º–∞–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
    try:
        await async_business_logic()
    except Exception as e:
        print(f"–ü–æ–π–º–∞–Ω–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    try:
        await async_business_logic_with_error()
    except Exception as e:
        print(f"–ü–æ–π–º–∞–Ω–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º
    try:
        await async_generator_business_logic()
    except Exception as e:
        print(f"–ü–æ–π–º–∞–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ: {e}")
    
    try:
        await async_generator_business_logic_with_error()
    except Exception as e:
        print(f"–ü–æ–π–º–∞–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ: {e}")
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    asyncio.run(main())
