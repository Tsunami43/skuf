#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Unit of Work (UoW) —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏ –≤ Skuf.

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
1. –°–æ–∑–¥–∞–Ω–∏–µ UoW —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
2. –°–æ–∑–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ UoW
3. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ DIContainer
4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ ContextDependency –∏ AsyncContextDependency
"""

import asyncio
from contextlib import contextmanager, asynccontextmanager
from typing import List, Optional
from skuf import DIContainer, ContextDependency, AsyncContextDependency


class Database:
    """–ü—Ä–æ—Å—Ç–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    
    def __init__(self):
        self.connected = False
        self.transaction_active = False
    
    def connect(self):
        print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        self.connected = True
    
    def disconnect(self):
        print("üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        self.connected = False
    
    def begin_transaction(self):
        print("üöÄ –ù–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...")
        self.transaction_active = True
    
    def commit(self):
        print("‚úÖ –ö–æ–º–º–∏—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...")
        self.transaction_active = False
    
    def rollback(self):
        print("‚ùå –û—Ç–∫–∞—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...")
        self.transaction_active = False


class UnitOfWork:
    """Unit of Work —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."""
    
    def __init__(self, db: Database):
        self.db = db
        self.operations: List[str] = []
    
    def add_operation(self, operation: str):
        """–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –≤ UoW."""
        self.operations.append(operation)
        print(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è: {operation}")
    
    def __enter__(self):
        """–í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç - –Ω–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."""
        self.db.begin_transaction()
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        """–í—ã—Ö–æ–¥ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ - –∫–æ–º–º–∏—Ç –∏–ª–∏ –æ—Ç–∫–∞—Ç."""
        if exc_type is None:
            # –ù–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π - –∫–æ–º–º–∏—Ç–∏–º
            self.db.commit()
            print(f"‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã: {self.operations}")
        else:
            # –ï—Å—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ - –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º
            self.db.rollback()
            print(f"‚ùå –û—Ç–∫–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–π: {self.operations}")
        return False  # –ù–µ –ø–æ–¥–∞–≤–ª—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è


class AsyncUnitOfWork:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π Unit of Work —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."""
    
    def __init__(self, db: Database):
        self.db = db
        self.operations: List[str] = []
    
    def add_operation(self, operation: str):
        """–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –≤ UoW."""
        self.operations.append(operation)
        print(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è: {operation}")
    
    async def __aenter__(self):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç - –Ω–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."""
        print("üöÄ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –Ω–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...")
        self.db.begin_transaction()
        return self
    
    async def __aexit__(self, exc_type, exc_val, exc_tb):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ - –∫–æ–º–º–∏—Ç –∏–ª–∏ –æ—Ç–∫–∞—Ç."""
        if exc_type is None:
            # –ù–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π - –∫–æ–º–º–∏—Ç–∏–º
            self.db.commit()
            print(f"‚úÖ –í—Å–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã: {self.operations}")
        else:
            # –ï—Å—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ - –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º
            self.db.rollback()
            print(f"‚ùå –û—Ç–∫–∞—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π: {self.operations}")
        return False  # –ù–µ –ø–æ–¥–∞–≤–ª—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è


def create_uow_context_manager() -> UnitOfWork:
    """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è UoW —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."""
    db = Database()
    db.connect()
    return UnitOfWork(db)


def create_async_uow_context_manager() -> AsyncUnitOfWork:
    """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ UoW —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."""
    db = Database()
    db.connect()
    return AsyncUnitOfWork(db)


def sync_business_logic():
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º UoW."""
    print("\n=== –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ ===")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ContextDependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è UoW
    with ContextDependency(UnitOfWork) as uow:
        uow.add_operation("–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        uow.add_operation("–û—Ç–ø—Ä–∞–≤–∏—Ç—å email")
        uow.add_operation("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        # –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏


def sync_business_logic_with_error():
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–∞—Ç–∞."""
    print("\n=== –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π ===")
    
    try:
        with ContextDependency(UnitOfWork) as uow:
            uow.add_operation("–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            uow.add_operation("–û—Ç–ø—Ä–∞–≤–∏—Ç—å email")
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            raise ValueError("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!")
    except ValueError as e:
        print(f"–ü–æ–π–º–∞–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")


async def async_business_logic():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º UoW."""
    print("\n=== –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ ===")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º AsyncContextDependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è UoW
    async with AsyncContextDependency(AsyncUnitOfWork) as uow:
        uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
        uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        # –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏


async def async_business_logic_with_error():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–∞—Ç–∞."""
    print("\n=== –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –æ—à–∏–±–∫–æ–π ===")
    
    try:
        async with AsyncContextDependency(AsyncUnitOfWork) as uow:
            uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            uow.add_operation("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            raise ValueError("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!")
    except ValueError as e:
        print(f"–ü–æ–π–º–∞–Ω–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Unit of Work —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏ –≤ Skuf")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ–∞–±—Ä–∏–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    DIContainer.register(UnitOfWork, context_manager=create_uow_context_manager)
    DIContainer.register(AsyncUnitOfWork, async_context_manager=create_async_uow_context_manager)
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
    sync_business_logic()
    sync_business_logic_with_error()
    
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
    asyncio.run(async_business_logic())
    asyncio.run(async_business_logic_with_error())
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    main()
